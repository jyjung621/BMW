-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- Category Table Create SQL
CREATE TABLE Category
(
    categoryNo    NUMBER(8)            NOT NULL, 
    name          VARCHAR2(20 CHAR)    NOT NULL, 
    parent        VARCHAR2(20 CHAR)    NULL, 
    isPublic      VARCHAR2(1 CHAR)     DEFAULT '1' NOT NULL, 
    division      char(1)              NULL, 
    CONSTRAINT CATEGORY_PK PRIMARY KEY (categoryNo)
)
/

COMMENT ON TABLE Category IS '카테고리'
/

COMMENT ON COLUMN Category.categoryNo IS '카테고리번호'
/

COMMENT ON COLUMN Category.name IS '이름'
/

COMMENT ON COLUMN Category.parent IS '상위카테고리'
/

COMMENT ON COLUMN Category.isPublic IS '0 : 비공개 1 : 공개 (default)'
/

COMMENT ON COLUMN Category.division IS '분류'
/


-- ItemInfo Table Create SQL
CREATE TABLE ItemInfo
(
    itemNo        NUMBER(8)              NOT NULL, 
    categoryNo    NUMBER(8)              NOT NULL, 
    brand         VARCHAR2(20 CHAR)      NOT NULL, 
    name          VARCHAR2(20 CHAR)      NOT NULL, 
    itemStock     NUMBER(18, 0)          NOT NULL, 
    info          VARCHAR2(4000 CHAR)    NULL, 
    price         NUMBER(12)             NULL, 
    rating        NUMBER(3)              NULL, 
    hits          NUMBER(8)              DEFAULT 0 NULL, 
    memberId      VARCHAR2(20 CHAR)      NOT NULL, 
    isPublic      CHAR(1)                DEFAULT '1' NOT NULL, 
    likeCnt       NUMBER(8)              DEFAULT 0 NULL, 
    htag          VARCHAR2(4000 CHAR)    NULL, 
    regDate       CHAR(14)               NOT NULL, 
    CONSTRAINT ITEMINFO_PK PRIMARY KEY (itemNo)
)
/

COMMENT ON TABLE ItemInfo IS '제품정보'
/

COMMENT ON COLUMN ItemInfo.itemNo IS '제품번호'
/

COMMENT ON COLUMN ItemInfo.categoryNo IS '카테고리번호'
/

COMMENT ON COLUMN ItemInfo.brand IS ' 2 3'
/

COMMENT ON COLUMN ItemInfo.name IS '제품명'
/

COMMENT ON COLUMN ItemInfo.itemStock IS '재고수량'
/

COMMENT ON COLUMN ItemInfo.info IS 'link 통해서 표현'
/

COMMENT ON COLUMN ItemInfo.price IS '가격'
/

COMMENT ON COLUMN ItemInfo.rating IS 'ra'
/

COMMENT ON COLUMN ItemInfo.hits IS '조회수'
/

COMMENT ON COLUMN ItemInfo.memberId IS '등록자ID'
/

COMMENT ON COLUMN ItemInfo.isPublic IS '0 : 비공개 1 : 공개 ( default)'
/

COMMENT ON COLUMN ItemInfo.likeCnt IS '추천수'
/

COMMENT ON COLUMN ItemInfo.htag IS '키워드'
/

COMMENT ON COLUMN ItemInfo.regDate IS '등록일시'
/

ALTER TABLE ItemInfo
    ADD CONSTRAINT FK_Category_TO_ItemInfo FOREIGN KEY ()
        REFERENCES Category ( categoryNo )
/


-- Ingredient Table Create SQL
CREATE TABLE Ingredient
(
    ingredientNo     NUMBER(8)            NOT NULL, 
    name             VARCHAR2(20 CHAR)    NOT NULL, 
    grade            VARCHAR2(2 CHAR)     DEFAULT '0' NOT NULL, 
    danger20         VARCHAR2(40 CHAR)    NULL, 
    dangerAllergy    VARCHAR2(40 CHAR)    NULL, 
    specialyType     VARCHAR2(40 CHAR)    NULL, 
    functional       VARCHAR2(40 CHAR)    NULL, 
    CONSTRAINT INGREDIENT_PK PRIMARY KEY (ingredientNo)
)
/

COMMENT ON TABLE Ingredient IS '제품성분'
/

COMMENT ON COLUMN Ingredient.ingredientNo IS '성분번호'
/

COMMENT ON COLUMN Ingredient.name IS '성분명'
/

COMMENT ON COLUMN Ingredient.grade IS ' 2'
/

COMMENT ON COLUMN Ingredient.danger20 IS '20가지주의성분'
/

COMMENT ON COLUMN Ingredient.dangerAllergy IS '알레르기주의성분'
/

COMMENT ON COLUMN Ingredient.specialyType IS '피부타입별특이성분'
/

COMMENT ON COLUMN Ingredient.functional IS '기능성성분'
/


-- MemberFiles Table Create SQL
CREATE TABLE MemberFiles
(
    seq         NUMBER(8)            NOT NULL, 
    memberId    VARCHAR2(20 CHAR)    NOT NULL, 
    CONSTRAINT MEMBERFILES_PK PRIMARY KEY (seq)
)
/

COMMENT ON TABLE MemberFiles IS '사용자파일'
/

COMMENT ON COLUMN MemberFiles.seq IS '순서'
/

COMMENT ON COLUMN MemberFiles.memberId IS '아이디'
/


-- Member Table Create SQL
CREATE TABLE Member
(
    memberId       VARCHAR2(20 CHAR)     NOT NULL, 
    passwd         VARCHAR2(20 CHAR)     NOT NULL, 
    nickname       VARCHAR2(20 CHAR)     NOT NULL, 
    name           VARCHAR2(10 CHAR)     NOT NULL, 
    birth          CHAR(8)               NOT NULL, 
    sex            CHAR(1)               DEFAULT '0' NOT NULL, 
    skinType       CHAR(1)               DEFAULT '0' NOT NULL, 
    skinComplex    VARCHAR2(50 CHAR)     DEFAULT '0' NOT NULL, 
    grade          CHAR(1)               DEFAULT '3' NOT NULL, 
    email          VARCHAR2(25 CHAR)     NOT NULL, 
    isEmail        VARCHAR2(1 CHAR)      DEFAULT '0' NOT NULL, 
    phone          VARCHAR2(15 CHAR)     NULL, 
    address        VARCHAR2(100 CHAR)    NULL, 
    question       VARCHAR2(30 CHAR)     NOT NULL, 
    answer         VARCHAR2(10 CHAR)     NOT NULL, 
    recommender    VARCHAR2(20 CHAR)     NULL, 
    joinDate       CHAR(14)              NOT NULL, 
    regDate        CHAR(14)              NOT NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (memberId)
)
/

COMMENT ON TABLE Member IS '회원정보'
/

COMMENT ON COLUMN Member.memberId IS '아이디'
/

COMMENT ON COLUMN Member.passwd IS '비밀번호'
/

COMMENT ON COLUMN Member.nickname IS '닉네임'
/

COMMENT ON COLUMN Member.name IS '이름'
/

COMMENT ON COLUMN Member.birth IS '생년월일'
/

COMMENT ON COLUMN Member.sex IS '0 : 남성 (default) 1 : 여성'
/

COMMENT ON COLUMN Member.skinType IS '0 : 건성 1 : 중성 2 : 지성 3 : 복합성 '
/

COMMENT ON COLUMN Member.skinComplex IS '0 : 해당없음 (default) 1 : 아토피 2 : 여드름 3 : 민감성 공통테이블 연계'
/

COMMENT ON COLUMN Member.grade IS '0 : 관리자 1 : 판매자 2 : 일반인 3 : 승인대기 (default) 4:휴면상태  5:탈퇴'
/

COMMENT ON COLUMN Member.email IS '이메일'
/

COMMENT ON COLUMN Member.isEmail IS '0 : 수신거부 1 : 수신ok'
/

COMMENT ON COLUMN Member.phone IS '핸드폰번호'
/

COMMENT ON COLUMN Member.address IS '주소'
/

COMMENT ON COLUMN Member.question IS '질문'
/

COMMENT ON COLUMN Member.answer IS '답'
/

COMMENT ON COLUMN Member.recommender IS '추천인'
/

COMMENT ON COLUMN Member.joinDate IS '가입일자'
/

COMMENT ON COLUMN Member.regDate IS '최근변동일시'
/


-- Board Table Create SQL
CREATE TABLE Board
(
    boardNo          NUMBER(8)              NOT NULL, 
    boardCategory    VARCHAR2(10 CHAR)      NOT NULL, 
    title            VARCHAR2(200 CHAR)     NOT NULL, 
    content          VARCHAR2(4000 CHAR)    NOT NULL, 
    viewGrade        CHAR(1)                NOT NULL, 
    isPublic         CHAR(1)                NOT NULL, 
    hits             NUMBER(8)              NOT NULL, 
    memberId         VARCHAR2(20 CHAR)      NOT NULL, 
    regDate          CHAR(14)               NOT NULL, 
    CONSTRAINT BOARD_PK PRIMARY KEY (boardNo)
)
/

COMMENT ON TABLE Board IS '게시글'
/

COMMENT ON COLUMN Board.boardNo IS '글번호'
/

COMMENT ON COLUMN Board.boardCategory IS '도메인 : BBS,Notice 공통테이블에 도메인 정의'
/

COMMENT ON COLUMN Board.title IS '제목'
/

COMMENT ON COLUMN Board.content IS '내용'
/

COMMENT ON COLUMN Board.viewGrade IS '공통테이블에 열람등급 정의'
/

COMMENT ON COLUMN Board.isPublic IS '공개여부'
/

COMMENT ON COLUMN Board.hits IS '조회수'
/

COMMENT ON COLUMN Board.memberId IS '회원정보 FK'
/

COMMENT ON COLUMN Board.regDate IS '등록일시'
/


-- SaveFiles Table Create SQL
CREATE TABLE SaveFiles
(
    mainNo            NUMBER(8)             NOT NULL, 
    subNo             NUMBER(4)             NOT NULL, 
    ref_Table         VARCHAR2(20)          NOT NULL, 
    filesNo           NUMBER(4)             NOT NULL, 
    originFileName    VARCHAR2(255 CHAR)    NOT NULL, 
    savedFileName     VARCHAR2(255 CHAR)    NOT NULL, 
    fileExtend        VARCHAR2(10 CHAR)     NULL, 
    filePath          VARCHAR2(255 CHAR)    NOT NULL, 
    fileSize          NUMBER(8)             NOT NULL, 
    regDate           CHAR(14)              NOT NULL, 
    CONSTRAINT SAVEFILES_PK PRIMARY KEY (mainNo, subNo, ref_Table, filesNo)
)
/

COMMENT ON TABLE SaveFiles IS '저장파일'
/

COMMENT ON COLUMN SaveFiles.mainNo IS '메인글번호'
/

COMMENT ON COLUMN SaveFiles.subNo IS '서브글번호'
/

COMMENT ON COLUMN SaveFiles.ref_Table IS '참조테이블'
/

COMMENT ON COLUMN SaveFiles.filesNo IS '파일저장번호'
/

COMMENT ON COLUMN SaveFiles.originFileName IS '원본파일명'
/

COMMENT ON COLUMN SaveFiles.savedFileName IS '저장파일명'
/

COMMENT ON COLUMN SaveFiles.fileExtend IS '확장자'
/

COMMENT ON COLUMN SaveFiles.filePath IS '저장경로'
/

COMMENT ON COLUMN SaveFiles.fileSize IS '파일사이즈'
/

COMMENT ON COLUMN SaveFiles.regDate IS '등록일시'
/


-- Clip Table Create SQL
CREATE TABLE Clip
(
    memberId    VARCHAR2(20 CHAR)     NOT NULL, 
    mainNo      NUMBER(8)             NOT NULL, 
    subNo       NUMBER(4)             NOT NULL, 
    title       VARCHAR2(100 CHAR)    NOT NULL, 
    regDate     CHAR(14)              NOT NULL, 
    CONSTRAINT CLIP_PK PRIMARY KEY (memberId, mainNo, subNo)
)
/

COMMENT ON TABLE Clip IS '스크랩'
/

COMMENT ON COLUMN Clip.memberId IS '아이디'
/

COMMENT ON COLUMN Clip.mainNo IS '메인글번호'
/

COMMENT ON COLUMN Clip.subNo IS '서브글번호'
/

COMMENT ON COLUMN Clip.title IS 'default -> 이전 제목 가져오기'
/

COMMENT ON COLUMN Clip.regDate IS '등록일시'
/


-- IngtList Table Create SQL
CREATE TABLE IngtList
(
    itemNo          NUMBER(8)    NOT NULL, 
    ingredientNo    NUMBER(8)    NOT NULL, 
    CONSTRAINT INGTLIST_PK PRIMARY KEY (itemNo, ingredientNo)
)
/

COMMENT ON TABLE IngtList IS '성분목록'
/

COMMENT ON COLUMN IngtList.itemNo IS '제품번호'
/

COMMENT ON COLUMN IngtList.ingredientNo IS '성분번호'
/

ALTER TABLE IngtList
    ADD CONSTRAINT FK_ItemInfo_TO_IngtList FOREIGN KEY ()
        REFERENCES ItemInfo ( itemNo )
/

ALTER TABLE IngtList
    ADD CONSTRAINT FK_Ingredient_TO_IngtList FOREIGN KEY ()
        REFERENCES Ingredient ( ingredientNo )
/


-- Ranking Table Create SQL
CREATE TABLE Ranking
(
    rankNo       NUMBER(8)            NOT NULL, 
    groupName    VARCHAR2(20 CHAR)    NOT NULL, 
    itemNo       VARCHAR2(10 CHAR)    NULL, 
    CONSTRAINT RANKING_PK PRIMARY KEY (rankNo, groupName)
)
/

COMMENT ON TABLE Ranking IS '랭킹'
/

COMMENT ON COLUMN Ranking.rankNo IS '랭킹번호'
/

COMMENT ON COLUMN Ranking.groupName IS '그룹'
/

COMMENT ON COLUMN Ranking.itemNo IS '항목'
/


-- Common Table Create SQL
CREATE TABLE Common
(
    commonCode    VARCHAR2(20 CHAR)     NOT NULL, 
    codeName      VARCHAR2(200 CHAR)    NOT NULL, 
    codeValue     VARCHAR2(200 CHAR)    NOT NULL, 
    seq           NUMBER(3)             NOT NULL, 
    explain       VARCHAR2(500 CHAR)    NULL, 
    memberId      VARCHAR2(20 CHAR)     NOT NULL, 
    regDate       CHAR(14)              NOT NULL, 
    CONSTRAINT COMMON_PK PRIMARY KEY (commonCode, codeName)
)
/

COMMENT ON TABLE Common IS '공통테이블'
/

COMMENT ON COLUMN Common.commonCode IS '번호'
/

COMMENT ON COLUMN Common.codeName IS '코드명'
/

COMMENT ON COLUMN Common.codeValue IS '값 정의'
/

COMMENT ON COLUMN Common.seq IS '공통코드 내에 순서를 정의할때'
/

COMMENT ON COLUMN Common.explain IS '각 값의 설명 기술'
/

COMMENT ON COLUMN Common.memberId IS '등록자ID'
/

COMMENT ON COLUMN Common.regDate IS '등록일시'
/


-- Comments Table Create SQL
CREATE TABLE Comments
(
    mainNo       NUMBER(8)              NOT NULL, 
    subNo        NUMBER(4)              NOT NULL, 
    ref_Table    VARCHAR2(20 CHAR)      NOT NULL, 
    isPublic     CHAR(1)                NOT NULL, 
    hits         NUMBER(8)              NOT NULL, 
    ref          NUMBER(4)              NULL, 
    re_Step      NUMBER(4)              NULL, 
    re_Level     NUMBER(4)              NULL, 
    content      VARCHAR2(4000 CHAR)    NULL, 
    rating       NUMBER(1)              NULL, 
    likeCnt      NUMBER(8)              NULL, 
    memberId     VARCHAR2(20 CHAR)      NOT NULL, 
    content2     VARCHAR2(4000 CHAR)    NULL, 
    content3     VARCHAR2(4000 CHAR)    NULL, 
    htag         VARCHAR2(4000 CHAR)    NULL, 
    regDate      CHAR(14)               NOT NULL, 
    CONSTRAINT COMMENTS_PK PRIMARY KEY (mainNo, subNo, ref_Table)
)
/

COMMENT ON TABLE Comments IS '첨부글'
/

COMMENT ON COLUMN Comments.mainNo IS '메인글번호'
/

COMMENT ON COLUMN Comments.subNo IS '서브글번호'
/

COMMENT ON COLUMN Comments.ref_Table IS '제품정보'
/

COMMENT ON COLUMN Comments.isPublic IS '공개여부'
/

COMMENT ON COLUMN Comments.hits IS '조회수'
/

COMMENT ON COLUMN Comments.ref IS '참조글'
/

COMMENT ON COLUMN Comments.re_Step IS '정렬순서'
/

COMMENT ON COLUMN Comments.re_Level IS '레벨'
/

COMMENT ON COLUMN Comments.content IS '내용'
/

COMMENT ON COLUMN Comments.rating IS '평점'
/

COMMENT ON COLUMN Comments.likeCnt IS '추천수'
/

COMMENT ON COLUMN Comments.memberId IS '등록자ID'
/

COMMENT ON COLUMN Comments.content2 IS '내용2'
/

COMMENT ON COLUMN Comments.content3 IS '내용3'
/

COMMENT ON COLUMN Comments.htag IS '키워드'
/

COMMENT ON COLUMN Comments.regDate IS '등록일시'
/


-- Shopping Table Create SQL
CREATE TABLE Shopping
(
    orderNo     NUMBER(8)            NOT NULL, 
    memberId    VARCHAR2(20)         NULL, 
    itemNo      VARCHAR2(20)         NULL, 
    amount      NUMBER(3)            NULL, 
    receiver    VARCHAR2(20)         NULL, 
    recvTel     VARCHAR2(15 CHAR)    NULL, 
    address     VARCHAR2(2000)       NULL, 
    status      CHAR(1)              NULL, 
    memo        VARCHAR2(100)        NULL, 
    regDate     CHAR(14)             NULL, 
    CONSTRAINT SHOPPING_PK PRIMARY KEY (orderNo)
)
/

COMMENT ON TABLE Shopping IS '장바구니/주문내역'
/

COMMENT ON COLUMN Shopping.orderNo IS '주문번호'
/

COMMENT ON COLUMN Shopping.memberId IS '회원아이디'
/

COMMENT ON COLUMN Shopping.itemNo IS '제품번호'
/

COMMENT ON COLUMN Shopping.amount IS '주문수량'
/

COMMENT ON COLUMN Shopping.receiver IS '수령인'
/

COMMENT ON COLUMN Shopping.recvTel IS '수령인번호'
/

COMMENT ON COLUMN Shopping.address IS '배송지'
/

COMMENT ON COLUMN Shopping.status IS '주문상태'
/

COMMENT ON COLUMN Shopping.memo IS '메모'
/

COMMENT ON COLUMN Shopping.regDate IS '주문일자'
/


-- point Table Create SQL
CREATE TABLE point
(
    memberId    VARCHAR2(20 CHAR)    NOT NULL, 
    isIncome    CHAR(1)              NOT NULL, 
    price       NUMBER(18, 0)        NOT NULL, 
    regDate     char(14)             NOT NULL, 
    point       NUMBER(18, 0)        NOT NULL
)
/

COMMENT ON COLUMN point.memberId IS '아이디'
/

COMMENT ON COLUMN point.isIncome IS '0:충전 1:지출'
/

COMMENT ON COLUMN point.price IS '금액'
/

COMMENT ON COLUMN point.regDate IS '내역일자'
/

COMMENT ON COLUMN point.point IS '최종포인트'
/


-- Coupon Table Create SQL
CREATE TABLE Coupon
(
    seq         NUMBER(20)           NOT NULL, 
    memberId    VARCHAR2(20 CHAR)    NOT NULL, 
    cpCode      VARCHAR2(11)         NULL, 
    cpName      VARCHAR2(30 CHAR)    NOT NULL, 
    discount    NUMBER(8)            NOT NULL, 
    cpReg       CHAR(14)             NULL, 
    cpExp       CHAR(14)             NULL, 
    used        CHAR(1)              NOT NULL, 
    CONSTRAINT COUPON_PK PRIMARY KEY (seq)
)
/

COMMENT ON COLUMN Coupon.seq IS '번호'
/

COMMENT ON COLUMN Coupon.memberId IS '아이디'
/

COMMENT ON COLUMN Coupon.cpCode IS '쿠폰코드'
/

COMMENT ON COLUMN Coupon.cpName IS '쿠폰명'
/

COMMENT ON COLUMN Coupon.discount IS '할인금액'
/

COMMENT ON COLUMN Coupon.cpReg IS '발급일'
/

COMMENT ON COLUMN Coupon.cpExp IS '만료일'
/

COMMENT ON COLUMN Coupon.used IS '0:미사용 1:사용'
/


